<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{ or .config.Title "Flimsy" }}</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="https://www.nerdfonts.com/assets/css/webfont.css">
  <link rel="icon" type="image/png" href="/static/homepage.png">
  <script src="/static/htmx.min.js"></script>
  <script src="/static/hyperscript.min.js"></script>
  <script src="/static/sortable.min.js"></script>
</head>

<body>
  <header>
    <div>
      {{ if .config.Icon }}<img id="icon" src="/data/icons/{{ .config.Icon }}">{{ end }}
      {{ if .config.Title }}<h1 id="title">{{ .config.Title }}</h1>{{ end }}
    </div>
    <div>
      {{ if .IsLoggedIn }}
        <button id="configButton" hx-get="/config" hx-target="body" hx-swap="beforeend">⚙️</button>
        <a id="logout" href="logout">Logout</a>
      {{ else if .IsAuthDisabled }}
        <a id="login" href="login">Login</a>
      {{ else }}
        <a id="login" href="#" hx-get="/login" hx-target="body" hx-swap="beforeend">Login</a>
      {{ end }}
      <div id="system-info" hx-get="/systemInfo" hx-trigger="load, every 1m"></div>
      {{ if .FLIMSY_WEATHER_API_KEY }}
        <div class="weather" hx-get="/weather" hx-trigger="load, every 60m">
        {{ template "weather.tmpl" . }}
        </div>
      {{ end }}
    </div>
  </header>

  {{ if .IsLoggedIn }}
  <div id="lists" hx-post="/reorderLists" hx-swap="none" hx-trigger="reorderLists" hx-vars="js:{ids: [...event.target.querySelectorAll('.list')].map(i => i.id.replace('list_', ''))}" >
    {{ range .listsAndItems }}
      {{ template "list.loggedin.tmpl" . }}
    {{ end }}
    <script>
      new Sortable(document.querySelector("#lists"), {
        filter: "#addList",
        animation: 150,
        swapThreshold: 0.65,
        group: "lists",
        onEnd: function (e) {
          htmx.trigger(e.to, 'reorderLists');
        }
      });
    </script>
  {{ else }}
  <script>
    var keyQueue = [];
    var shortcuts = [];
  </script>
  <div id="lists">
    {{ range .listsAndItems }}
      {{ template "list.tmpl" . }}
    {{ end }}
  {{ end }}
  </div>

  {{ if .IsLoggedIn }}
    <button id="addList" hx-put="/list" hx-target="body" hx-swap="beforeend">➕ Add List</button>
  {{ end }}

  <script type="text/javascript">
    {{ if .session_message }}
      alert("{{ .session_message }}");
    {{ end }}

    {{ if not .IsLoggedIn }}
    document.addEventListener('keydown', function(event) {
      keyQueue.push(event.key);
      if (keyQueue.length > 3) {
        keyQueue.shift();
      }

      var keysString = keyQueue.join('');
      for (const [key, value] of Object.entries(shortcuts)) {
        if (keysString.endsWith(key)) {
          window.open(value, "_blank");
        }
      }
    });
    {{ end }}
  </script>

</body>
</html>
