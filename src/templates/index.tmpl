<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{ or .config.Title "Flimsy" }}</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="https://www.nerdfonts.com/assets/css/webfont.css">
  <link rel="icon" type="image/png" href="/static/homepage.png">
  <script
			  src="https://code.jquery.com/jquery-3.7.1.min.js"
			  integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
			  crossorigin="anonymous"></script>
  <script
			  src="https://code.jquery.com/ui/1.14.1/jquery-ui.min.js"
			  integrity="sha256-AlTido85uXPlSyyaZNsjJXeCs07eSv3r43kyCVc8ChI="
			  crossorigin="anonymous"></script>
  <script src="/static/htmx.min.js"></script>
  <script src="/static/hyperscript.min.js"></script>
</head>

<body>
  <header>
    <div>
      {{ if .config.Icon }}<img id="icon" src="/data/icons/{{ .config.Icon }}">{{ end }}
      {{ if .config.Title }}<h1 id="title">{{ .config.Title }}</h1>{{ end }}
    </div>
    <div>
      {{ if .IsLoggedIn }}
        <button id="configButton" hx-get="/config" hx-target="body" hx-swap="beforeend">⚙️</button>
        <a id="logout" href="logout">Logout</a>
      {{ else if .IsAuthDisabled }}
        <a id="login" href="login">Login</a>
      {{ else }}
        <a id="login" href="#" hx-get="/login" hx-target="body" hx-swap="beforeend">Login</a>
      {{ end }}
      <div id="system-info" hx-get="/systemInfo" hx-trigger="load"></div>
      {{ if .FLIMSY_WEATHER_API_KEY }}
        <div class="weather">
          <img>
          <div class="location"></div>
          <div class="temp"></div>
          <div class="description"></div>
        </div>
      {{ end }}
    </div>
  </header>

  <div id="lists" style="clear:both;">
  {{ if .IsLoggedIn }}
    {{ range .listsAndItems }}
      {{ template "list.loggedin.tmpl" . }}
    {{ end }}
  {{ else }}
    {{ range .listsAndItems }}
      {{ template "list.tmpl" . }}
    {{ end }}
  {{ end }}
  </div>

  {{ if .IsLoggedIn }}
    <button id="addList">➕ Add List</button>
  {{ end }}

  <script type="text/javascript">
    function deleteList() {
      if (!confirm("Are you sure that you want to delete this list and all its items?")) return;
      
      const id = $('#editListDialog form').attr('action').replace('lists/edit.php?id=', '');
      $.ajax({
        url: 'lists/delete.php?id=' + id,
        success: () => {
          $('#list_' + id).remove();
          $('#editListDialog').dialog('close');
        }
      });
    }
    function deleteItem() {
      if (!confirm("Are you sure that you want to delete this item?")) return;
      
      const id = $('#editItemDialog form').attr('action').replace('items/edit.php?itemId=', '');
      $.ajax({
        url: 'items/delete.php?itemId=' + id,
        success: () => {
          $('#item_' + id).remove();
          $('#editItemDialog').dialog('close');
        }
      });
    }

    {{ if .FLIMSY_WEATHER_API_KEY }}
    function updateWeather() {
      $.ajax({
        url: 'https://api.openweathermap.org/data/2.5/weather',
        data: {
          q: '{{ .FLIMSY_WEATHER_LOCATION }}',
          units : '{{ .FLIMSY_WEATHER_UNITS }}',
          lang : '{{ .FLIMSY_WEATHER_LANGUAGE }}',
          appid : '{{ .FLIMSY_WEATHER_API_KEY }}',
        },
        success: (data) => {
          var units;
          switch ('{{ .FLIMSY_WEATHER_UNITS }}') {
            default:
            case 'standard': units = 'K'; break;
            case 'metric': units = 'C'; break;
            case 'imperial': units = 'F'; break;
          };
          $('.weather img').attr('src', 'https://openweathermap.org/img/wn/' + data.weather[0].icon + '@2x.png');
          $('.weather .location').html(data.name + ', ' + data.sys.country);
          $('.weather .description').html(data.weather[0].description);
          $('.weather .temp').html(Math.round(data.main.temp) + ' °' + units);
        }
      });
    }
    {{ end }}

    $('document').ready(() => {
      {{ if .session_message }}
        alert("{{ .session_message }}");
      {{ end }}

      $('#loginDialog').dialog({
        title: 'Login',
        autoOpen: false,
        modal: true,
        buttons: {
          "Login": () => {
            if ($('#loginDialog :invalid').length > 0) {
              return;
            }
            $.ajax({
              url: 'login',
              method: 'post',
              data: $('#loginDialog form').serialize(),
              success: (data) => {
                if (data.error) {
                  alert(data.error);
                  return;
                }
                location.reload();
              }
            });
          },
          "Cancel": () => {
             $('#loginDialog').dialog('close');
          },
        }
      });

      $('div.item').click((e) => {

        // Click on an item to edit it 
        {{ if .IsLoggedIn }}
          if (e.target.id.startsWith('addItem_')) return;

          const itemId = e.currentTarget.id.replace('item_', '');
          $.ajax({
            url: 'items/get.php?id=' + itemId,
            success: (item) => {
              $('#itemTitle').val(item.title);
              $('#itemUrl').val(item.url);
              $('#itemIcon').val(item.icon);

              var buttons = $('#editItemDialog').dialog('option', 'buttons');
              if (!buttons.hasOwnProperty('Delete')) {
                buttons = { 'Delete': deleteItem, ...buttons };
              }
              $('#editItemDialog').dialog('option', 'buttons', buttons);
              $('#editItemDialog').dialog('option', 'title', 'Edit Item');
              $('#editItemDialog form').attr('action', 'items/edit.php?itemId=' + item.id);
              $('#editItemDialog').dialog('open');
            }
          });

        // Click on an item to visit it's url
        {{ else }}
          const url = $('#' + e.currentTarget.id + ' div.details div.url').text();
          window.open(url);
        {{ end }}
      });

      {{ if .IsLoggedIn }}
        $('#configBackgroundUpload').change(() => {
          $('#autodetect_colors').removeAttr('disabled');
          $('#configBackgroundTypeUpload').prop('checked', true);
        });
        $('#configBackgroundImage').change((e) => {
          if (e.target.value != '') { 
            $('#autodetect_colors').removeAttr('disabled');
            $('#configBackgroundTypeKeep').prop('checked', true);
          }
          else {
            $('#autodetect_colors').attr('disabled', 'disabled');
            $('#manual_colors').prop('checked', true);
          }
        });
        $('#autodetect_colors').change(() => {
          if ($('#autodetect_colors').is(':checked')) {
            $('#configDialog input[type=color]').attr('disabled', 'disabled');
          }
        });
        $('#manual_colors').change(() => {
          if ($('#manual_colors').is(':checked')) {
            $('#configDialog input[type=color]').removeAttr('disabled');
          }
        });

        $('div.list h2').click((e) => {
          const id = e.currentTarget.parentNode.id.replace('list_', '');
          $('#listTitle').val(data.find(l => l.id == id).title);
          $('#listRows').val(data.find(l => l.id == id).number_of_rows);

          var buttons = $('#editListDialog').dialog('option', 'buttons');
          if (buttons.hasOwnProperty('Delete') == false) {
            buttons = { 'Delete': deleteList, ...buttons };
          }
          $('#editListDialog').dialog('option', 'buttons', buttons);
          $('#editListDialog').dialog('option', 'title', 'Edit List');
          $('#editListDialog form').attr('action', 'lists/edit.php?id=' + id);
          $('#editListDialog').dialog('open');
        })

        $('div.addItem button').click((e) => {
          const listId = e.target.id.replace('addItem_', '');
          $('#itemTitle').val('');
          $('#itemUrl').val('');
          $('#itemIcon').val('');

          var buttons = $('#editItemDialog').dialog('option', 'buttons');
          if (buttons.hasOwnProperty('Delete')) {
            delete buttons.Delete;
          }
          $('#editItemDialog').dialog('option', 'buttons', buttons);
          $('#editItemDialog').dialog('option', 'title', 'Add New Item');
          $('#editItemDialog form').attr('action', 'items/add.php?listId=' + listId);
          $('#editItemDialog').dialog('open');
        });

          $('#lists').sortable({
            helper : 'clone',
            stop: function(event, ui) {
              const listIds = $(ui.item).parent().children("div.list").map((l, el) => el.id.replace('list_', '')).toArray();
              $.ajax({
                url: 'lists/reorder.php',
                method: 'POST',
                data: {
                  listIds: listIds
                }
              });
            } 
          })
          $("div.list").sortable({
            helper: 'clone',
            items: "div.item",
            connectWith: ".list",
            stop: function(event, ui) {
              const listId = $(ui.item).parent().parent().attr('id').replace('list_', '');
              const itemIds = $(ui.item).parent().children("div.item").map((i, el) => el.id.replace('item_', '')).toArray();

              // Move the addItem button to the end of the list, in case the item was dropped after it
              $('#addItem_' + listId).parent().appendTo($('#addItem_' + listId).parent().parent());

              $.ajax({
                url: 'items/reorder.php',
                method: 'POST',
                data: {
                  listId: listId,
                  itemIds: itemIds
                }
              });
            }
        });
        $('button').css('display', 'inline-block');

        $('#addList').click(() => {
          $('#listTitle').val('');

          var buttons = $('#editListDialog').dialog('option', 'buttons');
          if (buttons.hasOwnProperty('Delete')) {
            delete buttons.Delete;
          }
          $('#editListDialog').dialog('option', 'buttons', buttons);
          $('#editListDialog').dialog('option', 'title', 'Add New List');
          $('#editListDialog form').attr('action', 'lists/add.php');
          $('#editListDialog').dialog('open');
        });

        $('#editListDialog').dialog({
          autoOpen: false,
          modal: true,
          buttons: {
            "Save": () => {
              if ($('#editListDialog :invalid').length > 0) {
                return;
              }
              $('#editListDialog form').submit();
            },
            "Cancel": () => {
              $('#editListDialog').dialog('close');
            },
          }
        });

        $('#editItemDialog').dialog({
          autoOpen: false,
          modal: true,
          buttons: {
            "Save": () => {
              if ($('#editItemDialog :invalid').length > 0) {
                return;
              }
              $('#editItemDialog form').submit();
            },
            "Cancel": () => {
              $('#editItemDialog').dialog('close');
            },
          }
        });
      {{ end }}

      {{ if .FLIMSY_WEATHER_API_KEY }}updateWeather();{{ end }} 
    });
  </script>

</body>
</html>
