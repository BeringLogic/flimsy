<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{ or .config.Title "Flimsy" }}</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="https://www.nerdfonts.com/assets/css/webfont.css">
  <link rel="icon" type="image/png" href="/static/homepage.png">
  <script
			  src="https://code.jquery.com/jquery-3.7.1.min.js"
			  integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
			  crossorigin="anonymous"></script>
  <script src="/static/htmx.min.js"></script>
  <script src="/static/hyperscript.min.js"></script>
  <script src="/static/sortable.min.js"></script>
</head>

<body>
  <header>
    <div>
      {{ if .config.Icon }}<img id="icon" src="/data/icons/{{ .config.Icon }}">{{ end }}
      {{ if .config.Title }}<h1 id="title">{{ .config.Title }}</h1>{{ end }}
    </div>
    <div>
      {{ if .IsLoggedIn }}
        <button id="configButton" hx-get="/config" hx-target="body" hx-swap="beforeend">⚙️</button>
        <a id="logout" href="logout">Logout</a>
      {{ else if .IsAuthDisabled }}
        <a id="login" href="login">Login</a>
      {{ else }}
        <a id="login" href="#" hx-get="/login" hx-target="body" hx-swap="beforeend">Login</a>
      {{ end }}
      <div id="system-info" hx-get="/systemInfo" hx-trigger="load"></div>
      {{ if .FLIMSY_WEATHER_API_KEY }}
        <div class="weather">
          <img>
          <div class="location"></div>
          <div class="temp"></div>
          <div class="description"></div>
        </div>
      {{ end }}
    </div>
  </header>

  <div id="lists" style="clear:both;" hx-post="/reorderLists" hx-swap="none" hx-trigger="reorderLists" hx-vars="js:{ids: [...event.target.querySelectorAll('.list')].map(i => i.id.replace('list_', ''))}" >
  {{ if .IsLoggedIn }}
    {{ range .listsAndItems }}
      {{ template "list.loggedin.tmpl" . }}
    {{ end }}
    <script>
      new Sortable(document.querySelector("#lists"), {
        filter: "#addList",
        animation: 150,
        swapThreshold: 0.65,
        group: "lists",
        onEnd: function (e) {
          htmx.trigger(e.to, 'reorderLists');
        }
      });
    </script>
  {{ else }}
    {{ range .listsAndItems }}
      {{ template "list.tmpl" . }}
    {{ end }}
  {{ end }}
  </div>

  {{ if .IsLoggedIn }}
    <button id="addList" hx-put="/list" hx-target="body" hx-swap="beforeend">➕ Add List</button>
  {{ end }}

  <script type="text/javascript">
    {{ if .FLIMSY_WEATHER_API_KEY }}
    function updateWeather() {
      $.ajax({
        url: 'https://api.openweathermap.org/data/2.5/weather',
        data: {
          q: '{{ .FLIMSY_WEATHER_LOCATION }}',
          units : '{{ .FLIMSY_WEATHER_UNITS }}',
          lang : '{{ .FLIMSY_WEATHER_LANGUAGE }}',
          appid : '{{ .FLIMSY_WEATHER_API_KEY }}',
        },
        success: (data) => {
          var units;
          switch ('{{ .FLIMSY_WEATHER_UNITS }}') {
            default:
            case 'standard': units = 'K'; break;
            case 'metric': units = 'C'; break;
            case 'imperial': units = 'F'; break;
          };
          $('.weather img').attr('src', 'https://openweathermap.org/img/wn/' + data.weather[0].icon + '@2x.png');
          $('.weather .location').html(data.name + ', ' + data.sys.country);
          $('.weather .description').html(data.weather[0].description);
          $('.weather .temp').html(Math.round(data.main.temp) + ' °' + units);
        }
      });
    }
    {{ end }}

    $('document').ready(() => {
      {{ if .session_message }}
        alert("{{ .session_message }}");
      {{ end }}

      {{ if .IsLoggedIn }}
        $('#configBackgroundUpload').change(() => {
          $('#autodetect_colors').removeAttr('disabled');
          $('#configBackgroundTypeUpload').prop('checked', true);
        });
        $('#configBackgroundImage').change((e) => {
          if (e.target.value != '') { 
            $('#autodetect_colors').removeAttr('disabled');
            $('#configBackgroundTypeKeep').prop('checked', true);
          }
          else {
            $('#autodetect_colors').attr('disabled', 'disabled');
            $('#manual_colors').prop('checked', true);
          }
        });
        $('#autodetect_colors').change(() => {
          if ($('#autodetect_colors').is(':checked')) {
            $('#configDialog input[type=color]').attr('disabled', 'disabled');
          }
        });
        $('#manual_colors').change(() => {
          if ($('#manual_colors').is(':checked')) {
            $('#configDialog input[type=color]').removeAttr('disabled');
          }
        });

        /* 
        $('#lists').sortable({
          helper : 'clone',
          stop: function(event, ui) {
            const listIds = $(ui.item).parent().children("div.list").map((l, el) => el.id.replace('list_', '')).toArray();
            $.ajax({
              url: 'lists/reorder',
              method: 'POST',
              data: {
                listIds: listIds
              }
            });
          } 
        })
        $("div.list").sortable({
          helper: 'clone',
          items: "div.item",
          connectWith: ".list",
          stop: function(event, ui) {
            const listId = $(ui.item).parent().parent().attr('id').replace('list_', '');
            const itemIds = $(ui.item).parent().children("div.item").map((i, el) => el.id.replace('item_', '')).toArray();

            // Move the addItem button to the end of the list, in case the item was dropped after it
            $('#addItem_' + listId).parent().appendTo($('#addItem_' + listId).parent().parent());

            $.ajax({
              url: 'items/reorder',
              method: 'POST',
              data: {
                listId: listId,
                itemIds: itemIds
              }
            });
          }
        });
        */

      {{ end }}

      {{ if .FLIMSY_WEATHER_API_KEY }}updateWeather();{{ end }} 
    });
  </script>

</body>
</html>
